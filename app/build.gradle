buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        // These docs use an open ended version so that our plugin
        // can be updated quickly in response to Android tooling updates

        // We recommend changing it to the latest version from our changelog:
        // https://docs.fabric.io/android/changelog.html#fabric-gradle-plugin
        classpath 'io.fabric.tools:gradle:1.22.0'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"

    defaultConfig {
        applicationId "co.techmagic.hr"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 2
        versionName "1.2.1.4"

        ndk {
            moduleName "keys"
        }

        jackOptions {
            enabled true
        }
    }

    signingConfigs {
        debug {
        }

        release
    }

    productFlavors {
        dev {
            buildConfigField 'String', 'HOST_URL', '"http://techmagic-hr-api-dev.eu-central-1.elasticbeanstalk.com"'
        }

        prod {
            buildConfigField 'String', 'HOST_URL', '"https://hrapi.techmagic.co"'
        }
    }

    buildTypes {
        debug {
            ext.betaDistributionEmails = "nazar.vrublevskyi@techmagic.co, ruslan.kuziak@techmagic.co, yulia.kotsur@techmagic.co"
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release
        }

        externalNativeBuild {
            ndkBuild {
                path 'src/main/jni/Android.mk'
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.7@aar') {
        transitive = true;
    }

    /* Core functions */
    compile('com.mikepenz:fastadapter:2.5.2@aar') {
        transitive = true
    }

    /* Contains additional helpers. Used for FastItemAdapter */
    compile 'com.mikepenz:fastadapter-commons:2.5.2@aar'

    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'

    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'

    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.2.0'
    compile 'com.squareup.retrofit2:converter-gson:2.2.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.6.0'

    compile 'com.google.firebase:firebase-core:11.0.0'
}

def props = new Properties()
props.load(new FileInputStream(rootProject.file("release.properties")))

android.signingConfigs.release.storeFile rootProject.file(props.keyStore)
android.signingConfigs.release.storePassword props.keyStorePassword
android.signingConfigs.release.keyAlias props.keyAlias
android.signingConfigs.release.keyPassword props.keyAliasPassword

apply plugin: 'com.google.gms.google-services'