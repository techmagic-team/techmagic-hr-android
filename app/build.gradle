buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        // These docs use an open ended version so that our plugin
        // can be updated quickly in response to Android tooling updates

        // We recommend changing it to the latest version from our changelog:
        // https://docs.fabric.io/android/changelog.html#fabric-gradle-plugin
        classpath 'io.fabric.tools:gradle:1.25.4'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: "../dependencies.gradle"

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "co.techmagic.hr"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 3
        versionName "2.1.0.9"
        multiDexEnabled true
    }

    signingConfigs {
        debug {
            storeFile file("keys/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        release {

        }
    }

    android.compileOptions.sourceCompatibility 1.8

    flavorDimensions "default"
    productFlavors {
        dev {
            buildConfigField 'String', 'HOST_URL', '"https://apidev.techmagic.co/hr-api/v1/"'
            versionName = android.defaultConfig.versionName + "(Dev)"
        }

        prod {
            buildConfigField 'String', 'HOST_URL', '"https://hrapi.techmagic.co/v1/"'
        }
    }

    buildTypes {
        def googleSinInProps = new Properties()
        googleSinInProps.load(new FileInputStream(rootProject.file("google_sign_in.properties")))

        debug {
            signingConfig signingConfigs.debug

            android.buildTypes.debug.buildConfigField 'String', 'GOOGLE_SERVER_KEY', googleSinInProps.serverKey
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release

            android.buildTypes.release.buildConfigField 'String', 'GOOGLE_SERVER_KEY', googleSinInProps.serverKey
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url 'https://raw.githubusercontent.com/eterverda/sntp/m2/' }
}

dependencies {
    implementation project(':viper')
    implementation 'com.android.support:multidex:1.0.3'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.7@aar') {
        transitive = true
    }
    /* Core functions */
    implementation('com.mikepenz:fastadapter:2.5.2@aar') {
        transitive = true
    }
    /* Contains additional helpers. Used for FastItemAdapter */
    implementation 'com.mikepenz:fastadapter-commons:2.5.2@aar'
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support:cardview-v7:$support_version"
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    implementation "io.reactivex:rxandroid:$rxjava_version"
    implementation 'com.squareup.retrofit2:retrofit:2.2.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.2.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.2.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.6.0'
    implementation 'net.danlew:android.joda:2.9.9'
    implementation 'com.google.android.gms:play-services-auth:16.0.1'
    implementation 'com.google.firebase:firebase-core:16.0.8'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.anko:anko-common:$anko_version"
    implementation 'com.mixpanel.android:mixpanel-android:5.1.3'
    implementation 'io.github.eterverda.sntp:sntp-android:0.1.5'
    implementation('com.wdullaer:materialdatetimepicker:3.6.4')

    testImplementation(unitTestDeps)
}

configurations.all {
    resolutionStrategy {
        def globalConfiguration = rootProject.extensions.getByName("ext")

        eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion globalConfiguration.support_version
                }
            }
        }
    }
}

apply plugin: 'com.google.gms.google-services'

def releaseProps = new Properties()
releaseProps.load(new FileInputStream(rootProject.file("app/keys/release.properties")))
android {
    signingConfigs {
        release {
            keyAlias = releaseProps['keyAlias']
            keyPassword = releaseProps['keyPassword']
            storeFile = file(releaseProps['storeFile'])
            storePassword = releaseProps['storePassword']
        }
    }
}